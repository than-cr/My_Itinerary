<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.env">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.env" />
              <option name="originalContent" value="FIREBASE_ANDROID_API_KEY=AIzaSyCR3n8gYib34TWQ6LhDDnDYzDbIWIHkfrQ&#10;FIREBASE_IOS_API_KEY=AIzaSyCR3n8gYib34TWQ6LhDDnDYzDbIWIHkfrQ" />
              <option name="updatedContent" value="FIREBASE_ANDROID_API_KEY=AIzaSyCR3n8gYib34TWQ6LhDDnDYzDbIWIHkfrQ&#10;FIREBASE_IOS_API_KEY=AIzaSyCR3n8gYib34TWQ6LhDDnDYzDbIWIHkfrQ&#10;&#10;# Firebase App IDs&#10;FIREBASE_ANDROID_APP_ID=1:1049034866836:android:aeb694ecf3a4f44beb3481&#10;FIREBASE_IOS_APP_ID=1:1049034866836:ios:3a948ae8c3ca268deb3481&#10;&#10;# Firebase Messaging Sender ID&#10;FIREBASE_MESSAGING_SENDER_ID=1049034866836&#10;&#10;# Firebase Project ID&#10;FIREBASE_PROJECT_ID=my-itinerary-11a23&#10;&#10;# Firebase Storage Bucket&#10;FIREBASE_STORAGE_BUCKET=my-itinerary-11a23.firebasestorage.app&#10;&#10;# iOS Client ID&#10;FIREBASE_IOS_CLIENT_ID=1049034866836-vs24vm8pqkldmk9okskba2cv28vh50fo.apps.googleusercontent.com&#10;&#10;# iOS Bundle ID&#10;FIREBASE_IOS_BUNDLE_ID=com.thancr.myitinerary" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/.env.example">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.env.example" />
              <option name="originalContent" value="FIREBASE_ANDROID_API_KEY=&#10;FIREBASE_IOS_API_KEY=" />
              <option name="updatedContent" value="FIREBASE_ANDROID_API_KEY=&#10;FIREBASE_IOS_API_KEY=&#10;&#10;# Firebase App IDs&#10;FIREBASE_ANDROID_APP_ID=&#10;FIREBASE_IOS_APP_ID=&#10;&#10;# Firebase Messaging Sender ID&#10;FIREBASE_MESSAGING_SENDER_ID=&#10;&#10;# Firebase Project ID&#10;FIREBASE_PROJECT_ID=&#10;&#10;# Firebase Storage Bucket&#10;FIREBASE_STORAGE_BUCKET=&#10;&#10;# iOS Client ID&#10;FIREBASE_IOS_CLIENT_ID=&#10;&#10;# iOS Bundle ID&#10;FIREBASE_IOS_BUNDLE_ID=" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/lib/firebase_options.dart">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/lib/firebase_options.dart" />
              <option name="originalContent" value="// File generated by FlutterFire CLI.&#10;// ignore_for_file: type=lint&#10;import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;&#10;import 'package:flutter_dotenv/flutter_dotenv.dart';&#10;import 'package:flutter/foundation.dart'&#10;    show defaultTargetPlatform, kIsWeb, TargetPlatform;&#10;&#10;/// Default [FirebaseOptions] for use with your Firebase apps.&#10;///&#10;/// Example:&#10;/// ```dart&#10;/// import 'firebase_options.dart';&#10;/// // ...&#10;/// await Firebase.initializeApp(&#10;///   options: DefaultFirebaseOptions.currentPlatform,&#10;/// );&#10;/// ```&#10;class DefaultFirebaseOptions {&#10;  static FirebaseOptions get currentPlatform {&#10;    if (kIsWeb) {&#10;      throw UnsupportedError(&#10;        'DefaultFirebaseOptions have not been configured for web - '&#10;        'you can reconfigure this by running the FlutterFire CLI again.',&#10;      );&#10;    }&#10;    switch (defaultTargetPlatform) {&#10;      case TargetPlatform.android:&#10;        return android;&#10;      case TargetPlatform.iOS:&#10;        return ios;&#10;      case TargetPlatform.macOS:&#10;        throw UnsupportedError(&#10;          'DefaultFirebaseOptions have not been configured for macos - '&#10;          'you can reconfigure this by running the FlutterFire CLI again.',&#10;        );&#10;      case TargetPlatform.windows:&#10;        throw UnsupportedError(&#10;          'DefaultFirebaseOptions have not been configured for windows - '&#10;          'you can reconfigure this by running the FlutterFire CLI again.',&#10;        );&#10;      case TargetPlatform.linux:&#10;        throw UnsupportedError(&#10;          'DefaultFirebaseOptions have not been configured for linux - '&#10;          'you can reconfigure this by running the FlutterFire CLI again.',&#10;        );&#10;      default:&#10;        throw UnsupportedError(&#10;          'DefaultFirebaseOptions are not supported for this platform.',&#10;        );&#10;    }&#10;  }&#10;&#10;  static FirebaseOptions android = FirebaseOptions(&#10;    apiKey: dotenv.env['FIREBASE_ANDROID_API_KEY']!,&#10;    appId: '1:1049034866836:android:aeb694ecf3a4f44beb3481',&#10;    messagingSenderId: '1049034866836',&#10;    projectId: 'my-itinerary-11a23',&#10;    storageBucket: 'my-itinerary-11a23.firebasestorage.app',&#10;  );&#10;&#10;  static FirebaseOptions ios = FirebaseOptions(&#10;    apiKey: dotenv.env['FIREBASE_IOS_API_KEY']!,&#10;    appId: '1:1049034866836:ios:3a948ae8c3ca268deb3481',&#10;    messagingSenderId: '1049034866836',&#10;    projectId: 'my-itinerary-11a23',&#10;    storageBucket: 'my-itinerary-11a23.firebasestorage.app',&#10;    iosClientId: '1049034866836-vs24vm8pqkldmk9okskba2cv28vh50fo.apps.googleusercontent.com',&#10;    iosBundleId: 'com.thancr.myitinerary',&#10;  );&#10;&#10;}" />
              <option name="updatedContent" value="// File generated by FlutterFire CLI.&#10;// ignore_for_file: type=lint&#10;import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;&#10;import 'package:flutter_dotenv/flutter_dotenv.dart';&#10;import 'package:flutter/foundation.dart'&#10;    show defaultTargetPlatform, kIsWeb, TargetPlatform;&#10;&#10;/// Default [FirebaseOptions] for use with your Firebase apps.&#10;///&#10;/// Example:&#10;/// ```dart&#10;/// import 'firebase_options.dart';&#10;/// // ...&#10;/// await Firebase.initializeApp(&#10;///   options: DefaultFirebaseOptions.currentPlatform,&#10;/// );&#10;/// ```&#10;class DefaultFirebaseOptions {&#10;  static FirebaseOptions get currentPlatform {&#10;    if (kIsWeb) {&#10;      throw UnsupportedError(&#10;        'DefaultFirebaseOptions have not been configured for web - '&#10;        'you can reconfigure this by running the FlutterFire CLI again.',&#10;      );&#10;    }&#10;    switch (defaultTargetPlatform) {&#10;      case TargetPlatform.android:&#10;        return android;&#10;      case TargetPlatform.iOS:&#10;        return ios;&#10;      case TargetPlatform.macOS:&#10;        throw UnsupportedError(&#10;          'DefaultFirebaseOptions have not been configured for macos - '&#10;          'you can reconfigure this by running the FlutterFire CLI again.',&#10;        );&#10;      case TargetPlatform.windows:&#10;        throw UnsupportedError(&#10;          'DefaultFirebaseOptions have not been configured for windows - '&#10;          'you can reconfigure this by running the FlutterFire CLI again.',&#10;        );&#10;      case TargetPlatform.linux:&#10;        throw UnsupportedError(&#10;          'DefaultFirebaseOptions have not been configured for linux - '&#10;          'you can reconfigure this by running the FlutterFire CLI again.',&#10;        );&#10;      default:&#10;        throw UnsupportedError(&#10;          'DefaultFirebaseOptions are not supported for this platform.',&#10;        );&#10;    }&#10;  }&#10;&#10;  static FirebaseOptions android = FirebaseOptions(&#10;    apiKey: dotenv.env['FIREBASE_ANDROID_API_KEY']!,&#10;    appId: dotenv.env['FIREBASE_ANDROID_APP_ID']!,&#10;    messagingSenderId: dotenv.env['FIREBASE_MESSAGING_SENDER_ID']!,&#10;    projectId: dotenv.env['FIREBASE_PROJECT_ID']!,&#10;    storageBucket: dotenv.env['FIREBASE_STORAGE_BUCKET']!,&#10;  );&#10;&#10;  static FirebaseOptions ios = FirebaseOptions(&#10;    apiKey: dotenv.env['FIREBASE_IOS_API_KEY']!,&#10;    appId: dotenv.env['FIREBASE_IOS_APP_ID']!,&#10;    messagingSenderId: dotenv.env['FIREBASE_MESSAGING_SENDER_ID']!,&#10;    projectId: dotenv.env['FIREBASE_PROJECT_ID']!,&#10;    storageBucket: dotenv.env['FIREBASE_STORAGE_BUCKET']!,&#10;    iosClientId: dotenv.env['FIREBASE_IOS_CLIENT_ID']!,&#10;    iosBundleId: dotenv.env['FIREBASE_IOS_BUNDLE_ID']!,&#10;  );&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>